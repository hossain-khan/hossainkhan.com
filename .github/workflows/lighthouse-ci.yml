name: Performance Monitoring with Lighthouse CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Start HTTP server
        run: |
          python3 -m http.server 8080 &
          sleep 3
        working-directory: ./

      - name: Run Lighthouse CI
        run: |
          echo "üöÄ Running Lighthouse CI Performance Audit..."
          echo "‚ÑπÔ∏è  LHCI_GITHUB_APP_TOKEN is optional - see LIGHTHOUSE-GITHUB-SETUP.md"
          lhci autorun
        env:
          # Optional: Enables GitHub PR comments and status checks
          # See LIGHTHOUSE-GITHUB-SETUP.md for setup instructions
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: |
            .lighthouseci/
            lighthouse-*.json

  performance-budget-check:
    runs-on: ubuntu-latest
    needs: lighthouse-ci
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Download Lighthouse results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-results
          path: ./

      - name: Debug - List downloaded files
        run: |
          echo "üìÇ Files in current directory:"
          ls -la
          echo ""
          if [ -d ".lighthouseci" ]; then
            echo "üìÇ Files in .lighthouseci directory:"
            ls -la .lighthouseci/
          else
            echo "‚ö†Ô∏è .lighthouseci directory not found"
          fi

      - name: Check Performance Budget
        run: |
          node -e "
          const fs = require('fs');
          const glob = require('glob');
          
          // Find the lighthouse JSON file
          const lighthouseFiles = fs.readdirSync('.').filter(f => f.startsWith('lighthouse-') && f.endsWith('.json'));
          if (lighthouseFiles.length === 0) {
            // Try in .lighthouseci directory
            const lhciFiles = fs.existsSync('.lighthouseci') ? 
              fs.readdirSync('.lighthouseci').filter(f => f.endsWith('.report.json')) : [];
            if (lhciFiles.length === 0) {
              console.log('‚ùå No Lighthouse results found');
              console.log('Available files:', fs.readdirSync('.').join(', '));
              process.exit(1);
            }
            // Use the first LHCI report file
            var lighthouseFile = '.lighthouseci/' + lhciFiles[0];
          } else {
            var lighthouseFile = lighthouseFiles[0];
          }
          
          console.log('üìä Reading Lighthouse results from:', lighthouseFile);
          
          const budget = JSON.parse(fs.readFileSync('./performance-budget.json', 'utf8'));
          const results = JSON.parse(fs.readFileSync(lighthouseFile, 'utf8'));
          
          console.log('üéØ PERFORMANCE BUDGET CHECK');
          console.log('============================');
          
          const score = Math.round(results.categories.performance.score * 100);
          const budgetScore = budget.monitoring.alerts.performance_score_threshold;
          
          console.log('Performance Score:', score + '/100', score >= budgetScore ? '‚úÖ' : '‚ùå');
          
          const fcp = parseFloat(results.audits['first-contentful-paint'].numericValue);
          const budgetFcp = parseFloat(budget.budget.firstContentfulPaint.replace('s', '')) * 1000;
          console.log('FCP:', (fcp/1000).toFixed(1) + 's', fcp <= budgetFcp ? '‚úÖ' : '‚ùå');
          
          const lcp = parseFloat(results.audits['largest-contentful-paint'].numericValue);  
          const budgetLcp = parseFloat(budget.budget.largestContentfulPaint.replace('s', '')) * 1000;
          console.log('LCP:', (lcp/1000).toFixed(1) + 's', lcp <= budgetLcp ? '‚úÖ' : '‚ùå');
          
          if (score < budgetScore || fcp > budgetFcp || lcp > budgetLcp) {
            console.log('');
            console.log('‚ùå Performance budget exceeded!');
            process.exit(1);
          } else {
            console.log('');
            console.log('‚úÖ Performance budget met!');
          }
          "

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Find the lighthouse JSON file
            const lighthouseFiles = fs.readdirSync('.').filter(f => f.startsWith('lighthouse-') && f.endsWith('.json'));
            let lighthouseFile;
            if (lighthouseFiles.length === 0) {
              // Try in .lighthouseci directory
              const lhciFiles = fs.existsSync('.lighthouseci') ? 
                fs.readdirSync('.lighthouseci').filter(f => f.endsWith('.report.json')) : [];
              if (lhciFiles.length === 0) {
                console.log('‚ùå No Lighthouse results found for PR comment');
                return;
              }
              lighthouseFile = '.lighthouseci/' + lhciFiles[0];
            } else {
              lighthouseFile = lighthouseFiles[0];
            }
            
            const results = JSON.parse(fs.readFileSync(lighthouseFile, 'utf8'));
            const budget = JSON.parse(fs.readFileSync('./performance-budget.json', 'utf8'));
            
            const score = Math.round(results.categories.performance.score * 100);
            const fcp = (results.audits['first-contentful-paint'].numericValue / 1000).toFixed(1);
            const lcp = (results.audits['largest-contentful-paint'].numericValue / 1000).toFixed(1);
            const cls = results.audits['cumulative-layout-shift'].displayValue;
            
            const comment = `## üöÄ Performance Report
            
            | Metric | Current | Budget | Status |
            |--------|---------|---------|---------|
            | Performance Score | ${score}/100 | ${budget.monitoring.alerts.performance_score_threshold}/100 | ${score >= budget.monitoring.alerts.performance_score_threshold ? '‚úÖ' : '‚ùå'} |
            | First Contentful Paint | ${fcp}s | ${budget.budget.firstContentfulPaint} | ${parseFloat(fcp) <= parseFloat(budget.budget.firstContentfulPaint) ? '‚úÖ' : '‚ùå'} |
            | Largest Contentful Paint | ${lcp}s | ${budget.budget.largestContentfulPaint} | ${parseFloat(lcp) <= parseFloat(budget.budget.largestContentfulPaint) ? '‚úÖ' : '‚ùå'} |
            | Cumulative Layout Shift | ${cls} | ${budget.budget.cumulativeLayoutShift} | ‚úÖ |
            
            üìä **Results File**: \`${lighthouseFile}\`
            
            View detailed results in the [Lighthouse CI dashboard](https://app.lighthouseci.com).
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
